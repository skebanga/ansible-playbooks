#!/bin/bash

readonly SRC_DIR=~/src
readonly LOG=/tmp/provision.out
readonly ARGS="$@"
readonly NARGS=$#

check_args()
{
	if (( $NARGS != 1 )); then
		echo "specify which playbook to run: $0 playbook"
	fi
}

clear_log()
{
	echo "logging in ${LOG}"
	rm -f ${LOG}
}

update_package_cache()
{
	local now=$(date +%s)
	local prev=$(stat -c %Y /var/lib/apt/periodic/update-success-stamp)
	local diff=$(expr $now - $prev)

	# older than 1 day
	if (( diff > 86400 )); then
		echo "updating package cache"
		sudo apt-get update >> ${LOG}
	fi
}

install_packages()
{
	local packages="openssh-server git python-setuptools"

	echo "installing required packages"
	sudo apt-get -y install ${packages} >> ${LOG}
}

install_ansible()
{
	mkdir -p ${SRC_DIR}/ansible
	pushd ${SRC_DIR}/ansible >> ${LOG}

	# download ansible
	if [[ ! -d ansible/.git ]]; then
		echo "installing ansible"
		git clone git://github.com/ansible/ansible.git
	else
		echo "updating ansible to latest"
		pushd ansible >> ${LOG}
		git pull >> ${LOG}
		popd >> ${LOG}
	fi

	# install ansible
	pushd ansible >> ${LOG}
	sudo make install >> ${LOG} 2>>${LOG}

	# configure ansible env
	source ./hacking/env-setup >> ${LOG} 2>>${LOG}
	popd >> ${LOG}

	popd >> ${LOG}
}

enable_ssh()
{
	echo "enabling ssh access on port 22"
	sudo ufw allow 22 >> ${LOG}
}

create_ssh_keys()
{
	local ssh_dir=~/.ssh

	if [[ ! -f ${ssh_dir}/id_rsa ]]; then
		mkdir -p ${ssh_dir}
		chmod 700 ${ssh_dir}

		pushd ${ssh_dir} >> ${LOG}
		ssh-keygen -t rsa -b 4096 -f ${ssh_dir}/id_rsa
		popd >> ${LOG}
	fi

	pushd ${ssh_dir} >> ${LOG}

	local key=$(cat id_rsa.pub)
	if [[ ! -f authorized_keys ]]; then
		touch authorized_keys
	fi
	if ! grep "${key}" authorized_keys >> ${LOG}; then
		echo "adding public key to localhost authorized_keys"
		echo "${key}" >> authorized_keys
	fi

	popd >> ${LOG}
}

run_playbook()
{
	mkdir -p ${SRC_DIR}/ansible
	pushd ${SRC_DIR}/ansible >> ${LOG}

	if [[ ! -d ansible-playbooks/.git ]]; then
		echo "installing ansible-playbooks"
		git clone git@github.com:stevelorimer/ansible-playbooks.git
	else
		echo "updating ansible-playbooks to latest"
		pushd ansible-playbooks >> ${LOG}
		git pull >> ${LOG}
		popd >> ${LOG}
	fi

	echo "running ansible playbook"
	pushd ansible-playbooks >> ${LOG}
 	ansible-playbook -i "local," $ARGS --ask-sudo-pass
	popd >> ${LOG}

	popd >> ${LOG}
}

run_intel_graphics_installer()
{
	if [[ "$ARGS" -eq "ubuntu-dev-steve.yml" ]]; then # TODO: use grep
		sudo intel-linux-graphics-installer
	fi
}

main()
{
	check_args
	clear_log
	update_package_cache
	install_packages
	install_ansible
	enable_ssh
	create_ssh_keys
	run_playbook
	run_intel_graphics_installer
}
main
